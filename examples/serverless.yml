# File: examples/serverless.yml
service: serverless-api-mockery

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  memorySize: 256
  timeout: 10
  environment:
    S3_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-data
    S3_KEY: mock-api-data.json
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
          Resource: arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*

functions:
  api:
    handler: aws-lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: any
          cors: true
      - http:
          path: /
          method: any
          cors: true

resources:
  Resources:
    MockApiDataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET}
        AccessControl: Private
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        LifecycleConfiguration:
          Rules:
            - Id: DeleteOldVersions
              Status: Enabled
              NoncurrentVersionExpiration:
                NoncurrentDays: 30

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000